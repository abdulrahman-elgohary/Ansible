---
- name: Playbook to Deploy a Kubernetes Cluster
  hosts: all:!dns
  tasks:

    - name: Install Required Services and Utilites 
      ansible.builtin.dnf:
        name: "{{item}}"
        state: present
      loop:
        - firewalld
        - 'dnf-command(versionlock)'
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - python3
        - python3-pip
        - python3-setuptools
        
    - name: Enable and Start Firewall
      ansible.builtin.service:
        name: firewalld
        state: started
        enabled: true

    - name: Open Required Ports for Master Node
      ansible.posix.firewalld:
        port: "{{item}}"
        immediate: true
        permanent: true
        state: enabled
      loop:
        - 6443/tcp
        - 2379-2389/tcp
        - 10250/tcp
        - 10259/tcp
        - 10257/tcp
      when: inventory_hostname in groups['master']
        
    - name: Open Required Ports for Master Node
      ansible.posix.firewalld:
        port: "{{item}}"
        immediate: true
        permanent: true
        state: enabled
      loop:
        - 10250/tcp
        - 10256/tcp
        - 30000-32767/tcp
      when: inventory_hostname in groups['worker']      

    - name: Disable Swap Immediatly
      ansible.builtin.command: swapoff -a 

    - name: Disable Swap Permanently
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^([^#].*\sswap\s)'
        line: '# \1'

    - name: Disable SELINUX Immediatly
      ansible.builtin.command: setenforce 0

    - name: Disable SELINUX Permanently
      ansible.builtin.replace:
        path: /etc/selinux/config
        regexp: '^SELINUX=enforcing'
        replace: 'SELINUX=permissive'
        #follow: yes 

    - name: Add the Kubernetes Repository
      ansible.builtin.yum_repository:
        name: Kubernetes
        description: kubernetes
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.32/rpm/
        gpgcheck: 1
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.32/rpm/repodata/repomd.xml.key
        file: kubernetes
      notify: Update System

    - meta: flush_handlers


    - name: Install Kubelet, Kubeadm, Kubectl
      ansible.builtin.dnf:
        name: "{{item}}"
        state: present
      loop:
        - kubelet-1.32.0
        - kubeadm-1.32.0
        - kubectl-1.32.0


    - name: Enable and Start Kubelet
      ansible.builtin.service:
        name: kubelet
        state: started
        enabled: true

    - name: Prevent automatic Upgrades
      community.general.yum_versionlock:
        name:
          - kubelet
          - kubeadm
          - kubectl

    - name: Add the Docker Repo for Container Runtime
      ansible.builtin.command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 
      notify: Update System

    - meta: flush_handlers

    - name: Install Containerd runtime
      ansible.builtin.yum:
        name: containerd
        state: latest

    - name: Start and enable Containerd
      ansible.builtin.service:
        name: containerd
        state: started
        enabled: true

    - name: Create a Directory for Containerd Configuration
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: "0755"

    - name: Generate default containerd Config
      ansible.builtin.command: containerd config default
      register: containerd_config

    - name: Write Containerd Config to file
      ansible.builtin.copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout }}"
        mode: "0644"

    - name: Update Containerd Config to use SystemD
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: "{{item.org}}"
        replace: "{{item.des}}"
      loop:
        - org: 'SystemdCgroup = false'
          des: 'SystemdCgroup = true'
        
        - org: 'sandbox_image = "registry.k8s.io/pause:3.8"'
          des: 'sandbox_image = "registry.k8s.io/pause:3.10"'

    - name: Tell crictl to use Containerd
      ansible.builtin.copy:
        dest: /etc/crictl.yaml
        content: |
          runtime-endpoint: unix:///run/containerd/containerd.sock
          image-endpoint: unix:///run/containerd/containerd.sock
          timeout: 10
          debug: false
        owner: root
        group: root
        mode: "0644"
      notify: Restart Containerd

    - meta: flush_handlers

    - name: Enable Required Kernel Modules
      ansible.builtin.blockinfile:
        path: /etc/modules-load.d/k8s.conf
        block: |
          overlay
          br_netfilter
        state: present
        create: true

    - name: Enable Required Kernel Modules
      ansible.builtin.blockinfile:
        path: /etc/sysctl.d/k8s.conf
        block: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1
        state: present
        create: true

    - name: Deploy the changes
      ansible.builtin.shell: |
        modprobe overlay
        modprobe br_netfilter
        sysctl --system

    - name: Initiate the Control Node
      ansible.builtin.command: kubeadm init --kubernetes-version=1.32.0 --pod-network-cidr=192.168.0.0/16 --cri-socket=unix:///run/containerd/containerd.sock
      register: kubeadm_output
      when: inventory_hostname in groups['master']

    - name: Create a directory for kubeadm Configuration
      ansible.builtin.file:
        path: /home/{{ansible_facts['env']['SUDO_USER']}}/.kube
        state: directory
        owner: "{{ansible_facts['env']['SUDO_USER']}}"
        group: "{{ansible_facts['env']['SUDO_USER']}}"
        mode: "0755"
      when: inventory_hostname in groups['master']

    - name: Copy the configuration to the .kube directory
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ansible_facts['env']['SUDO_USER']}}/.kube/config
        owner: "{{ansible_facts['env']['SUDO_USER']}}"
        group: "{{ansible_facts['env']['SUDO_USER']}}"
        mode: "0644"
        remote_src: true
      when: inventory_hostname in groups['master']

    - name: Download Calico manifest
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml
        dest: /tmp/calico.yaml
      when: inventory_hostname in groups['master']


    - name: Install Kubernetes Python client using /usr/bin/python3
      ansible.builtin.pip:
        name: kubernetes
        executable: /usr/bin/pip3
      when: inventory_hostname in groups['master']

    - name: Apply thte CNI Plugin
      kubernetes.core.k8s:
        kubeconfig: /home/{{ansible_facts['env']['SUDO_USER']}}/.kube/config
        src: /tmp/calico.yaml
        state: present
      when: inventory_hostname in groups['master']

    - name: Show join command for workers
      ansible.builtin.debug:
        var: kubeadm_output
      when: inventory_hostname in groups['master']
  handlers:
    - name: Update System
      ansible.builtin.dnf:
        name: "*"
        state: latest

    - name: Restart Containerd
      ansible.builtin.service:
        name: containerd
        state: restarted

